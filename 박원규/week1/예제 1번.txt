# 예제 1번
# 파이토치 2주차 -선형회귀 lr값 바꾸기

import numpy as np
import torch

#선형 회귀 분석
##우리가 입력값, 출력 값 모두 값을 주고, 가장 평균이 되는 값을 예측하는 방법

x_train=torch.FloatTensor([[1],[2],[3]])
y_train=torch.FloatTensor([[2],[4],[6]])

#y = wx + b
# MSE = (y - 에측값)^2 * 학습레이즈(lr)

w=torch.zeros(1,requires_grad=True) #requires_grad=True는 우리가 학습할 것임을 암시/ 1은 출력 개수
b=torch.zeros(1,requires_grad=True)
#가중치와 편향 초기화 True로 설정해야함.

#학습 데이터 설정
###################################################################
#실제 학습

epoch = 10000 #반복학습 횟수

for epoch in range(1, epoch):
    hy=x_train * w + b ##우리가 구할 선형 회귀 식

    ##로스 계산법: 표준편차 이용; 로스 가장 적게 조정하는 방식으로 b조정
    cost=torch.mean((hy-y_train)**2)

    optimizer = torch.optim.SGD([w,b],lr=0.001) ##영어 엘알임. 값 조정하면서 값 예측
    ##SGD는 학습할 텐서, w변형 정도(작으면 속도가 느리고 크면 너무 크게 예측값을 바꿈)

    optimizer.zero_grad() ##로스값 초기화
    cost.backward() ##역전파
    optimizer.step() ##다시 학습(값 개선)

######################################################################

#테스트

#그냥 답을 넣을수는 없고, 위처럼 값 대입해야 함

test=torch.FloatTensor([6])
prediction = w * test + b
print(prediction.item()) ##html처럼 item()을 사용해 값만 출력함
